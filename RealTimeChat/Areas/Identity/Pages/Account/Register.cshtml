@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />

            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <span class="text-danger" id="emailerror"></span>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" id="emailid" class="form-control" autocomplete="email" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <span class="text-danger" id="usernameerror"></span>
            <div class="form-floating mb-3">
                <input asp-for="Input.AppUserName" id="usernameid" class="form-control" autocomplete="username" aria-required="true" placeholder="Username..." />
                <label asp-for="Input.AppUserName">UserName</label>
                <span asp-validation-for="Input.AppUserName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.FullName" class="form-control" autocomplete="fullname" aria-required="true" placeholder="Full Name" />
                <label asp-for="Input.FullName">Full Name</label>
                <span asp-validation-for="Input.FullName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.ProfileUrl" class="form-control" autocomplete="picture" aria-required="true" placeholder="You can leave this blank for now..." />
                <label asp-for="Input.ProfileUrl">Profile Picture Url</label>
                <span asp-validation-for="Input.ProfileUrl" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                                                <div>
                                                    <p>
                                                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                                        about setting up this ASP.NET application to support logging in via external services</a>.
                                                    </p>
                                                </div>
                }
                else
                {
                                                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                                    <div>
                                                        <p>
                                                            @foreach (var provider in Model.ExternalLogins!)
                                {
                                                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                                                        </p>
                                                    </div>
                                                </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/signalr.js"></script>
    <script>
        var myButton = document.getElementById('registerSubmit');
        var connection = new signalR.HubConnectionBuilder().withUrl("/hubs/user").build();
                var eleme = document.getElementById("usernameerror");
                
        connection.on("UserNameChecked", (value) => {
            if (value != null) {
                eleme.innerText = value;
                myButton.disabled = true;
            } else {
                eleme.innerText = "";
                myButton.disabled = false;
            }

        })
        connection.on("EmailChecked", (value) => {
                var eleme = document.getElementById("emailerror");
            
            if (value != null) {
                eleme.innerText = value;
                myButton.disabled = true;
            } else {
                eleme.innerText = "";
                myButton.disabled =false;
            }

        })


        $('#emailid').on('input', function () {

            var query = $(this).val();
            connection.send("CheckEmail", query);
        });
        $('#usernameid').on('input', function () {

            var query = $(this).val();
            connection.send("CheckUserName", query);
        });


        function fullfiled() { console.log("Success"); }
        function notfullfiled() { console.log("NotSucccess"); }
        //Start Connection
        connection.start().then(fullfiled, notfullfiled)
      
       
    </script>
}
